CREATE TABLE users
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    public_id       UUID         NOT NULL,
    name            VARCHAR(50)  NOT NULL,
    email           VARCHAR(100) NOT NULL,
    hashed_password VARCHAR(100),
    role            varchar(20)  NOT NULL DEFAULT 'USER',
    email_verified  BOOLEAN      NOT NULL DEFAULT FALSE,
    enabled         BOOLEAN      NOT NULL DEFAULT TRUE,
    created_at      TIMESTAMPTZ  NOT NULL DEFAULT now(),
    updated_at      TIMESTAMPTZ  NOT NULL DEFAULT now(),

    CONSTRAINT uk_users_public_id UNIQUE (public_id),
    CONSTRAINT uk_users_email UNIQUE (email),
    CONSTRAINT ck_users_role CHECK (role IN ('USER', 'ADMIN'))
);

CREATE TABLE sessions
(
    id         UUID PRIMARY KEY,
    user_id    BIGINT      NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    expires_at TIMESTAMPTZ NOT NULL,

    CONSTRAINT fk_sessions_user FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE topics
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    slug VARCHAR(50) NOT NULL,
    name VARCHAR(50) NOT NULL,

    CONSTRAINT uk_topics_slug UNIQUE (slug)
);

CREATE TABLE problems
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number      INTEGER      NOT NULL,
    slug        VARCHAR(100) NOT NULL,
    title       VARCHAR(100) NOT NULL,
    difficulty  VARCHAR(20)  NOT NULL,
    description TEXT         NOT NULL,
    params      VARCHAR(100) NOT NULL,
    active      BOOLEAN      NOT NULL DEFAULT FALSE,
    created_at  TIMESTAMPTZ  NOT NULL DEFAULT NOW(),
    updated_at  TIMESTAMPTZ  NOT NULL DEFAULT NOW(),
    time_limit  INTEGER      NOT NULL DEFAULT 1,

    CONSTRAINT ck_problems_number CHECK (number > 0),
    CONSTRAINT ck_problems_time_limit CHECK (time_limit >= 1 AND time_limit <= 10),
    CONSTRAINT ck_problems_difficulty CHECK (difficulty in ('EASY', 'MEDIUM', 'HARD')),
    CONSTRAINT uk_problems_number UNIQUE (number),
    CONSTRAINT uk_problems_slug UNIQUE (slug)
);

CREATE TABLE problem_topics
(
    problem_id BIGINT NOT NULL,
    topic_id   BIGINT NOT NULL,

    PRIMARY KEY (problem_id, topic_id),
    CONSTRAINT fk_problem_id foreign key (problem_id) REFERENCES problems (id) ON DELETE CASCADE,
    CONSTRAINT fk_problems_topics_id foreign key (topic_id) REFERENCES topics (id) ON DELETE CASCADE
);

CREATE TABLE problem_codes
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    problem_id    BIGINT      NOT NULL,
    language      VARCHAR(20) NOT NULL,
    driver_code   TEXT        NOT NULL,
    user_code     TEXT        NOT NULL,
    solution_code TEXT        NOT NULL,

    CONSTRAINT ck_codes_language CHECK (language in ('CPP', 'JAVA', 'PYTHON')),
    CONSTRAINT uk_codes_problem_language UNIQUE (problem_id, language),
    CONSTRAINT fk_codes_problem_id foreign key (problem_id) REFERENCES problems (id) ON DELETE CASCADE
);

CREATE TABLE problem_testcases
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    problem_id BIGINT  NOT NULL,
    sample     BOOLEAN NOT NULL DEFAULT FALSE,
    input      TEXT    NOT NULL,
    output     TEXT    NOT NULL,

    CONSTRAINT fk_testcases_problem_id foreign key (problem_id) REFERENCES problems (id) ON DELETE CASCADE
);

CREATE TABLE problem_submissions
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id      BIGINT      NOT NULL,
    problem_id   BIGINT      NOT NULL,
    language     VARCHAR(20) NOT NULL,
    code         TEXT        NOT NULL,
    status       VARCHAR(20) NOT NULL,
    submitted_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),

    CONSTRAINT ck_submissions_language CHECK (language in ('CPP', 'JAVA', 'PYTHON')),
    CONSTRAINT ck_submissions_status CHECK (status in
                                            ('PENDING', 'CTE', 'RTE', 'WA', 'TLE', 'MLE', 'SOLVED', 'SERVER_ERROR')),
    CONSTRAINT fk_submissions_user_id foreign key (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_submissions_problem_id foreign key (problem_id) REFERENCES problems (id) ON DELETE CASCADE
);